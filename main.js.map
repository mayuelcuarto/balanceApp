{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/categorias/categorias.component.css","webpack:///./src/app/components/categorias/categorias.component.html","webpack:///./src/app/components/categorias/categorias.component.ts","webpack:///./src/app/components/conceptos/conceptos.component.css","webpack:///./src/app/components/conceptos/conceptos.component.html","webpack:///./src/app/components/conceptos/conceptos.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/users/login/login.component.css","webpack:///./src/app/components/users/login/login.component.html","webpack:///./src/app/components/users/login/login.component.ts","webpack:///./src/app/components/users/profile/profile.component.css","webpack:///./src/app/components/users/profile/profile.component.html","webpack:///./src/app/components/users/profile/profile.component.ts","webpack:///./src/app/components/users/register/register.component.css","webpack:///./src/app/components/users/register/register.component.html","webpack:///./src/app/components/users/register/register.component.ts","webpack:///./src/app/main-menu/main-menu.component.css","webpack:///./src/app/main-menu/main-menu.component.html","webpack:///./src/app/main-menu/main-menu.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/modals/categoria-modal/categoria-modal.component.css","webpack:///./src/app/modals/categoria-modal/categoria-modal.component.html","webpack:///./src/app/modals/categoria-modal/categoria-modal.component.ts","webpack:///./src/app/modals/concepto-modal/concepto-modal.component.css","webpack:///./src/app/modals/concepto-modal/concepto-modal.component.html","webpack:///./src/app/modals/concepto-modal/concepto-modal.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/categorias.service.ts","webpack:///./src/app/services/conceptos.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { ConceptosComponent } from './components/conceptos/conceptos.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\n\nconst routes: Routes = [\n\t{ path: '', component: HomeComponent },\n\t{ path: 'conceptos', component: ConceptosComponent },\n\t{ path: 'categorias', component: CategoriasComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<main-menu>\\n  <router-outlet></router-outlet>\\n</main-menu> \"","import { Component } from '@angular/core';\nimport 'hammerjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'balanceApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { ConceptosComponent } from './components/conceptos/conceptos.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/users/login/login.component';\nimport { RegisterComponent } from './components/users/register/register.component';\nimport { ProfileComponent } from './components/users/profile/profile.component';\n\nimport { MaterialModule } from './material.module';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\n\nimport { environment } from '../environments/environment';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ConceptoModalComponent } from './modals/concepto-modal/concepto-modal.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { CategoriaModalComponent } from './modals/categoria-modal/categoria-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConceptosComponent,\n    HomeComponent,\n    MainMenuComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    ConceptoModalComponent,\n    CategoriasComponent,\n    CategoriaModalComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    MaterialModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFireStorageModule\n  ],\n  entryComponents: [\n  ConceptoModalComponent,\n  CategoriaModalComponent\n  ],\n  providers: [\n    AngularFireAuth,\n    AngularFirestore\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"h1{\\r\\n\\ttext-align: center;\\r\\n}\\r\\n\\r\\ntable{\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.mat-icon{\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jYXRlZ29yaWFzL2NhdGVnb3JpYXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGtCQUFrQjtBQUNuQjs7QUFFQTtDQUNDLFdBQVc7QUFDWjs7QUFFQTtDQUNDLGVBQWU7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NhdGVnb3JpYXMvY2F0ZWdvcmlhcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG50YWJsZXtcclxuXHR3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1hdC1pY29ue1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"header-app\\\">\\n  \\t<h1>Mantenimiento de Categorías</h1>\\n  </div>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\">\\n  \\t<mat-icon>note_add</mat-icon> NEW\\n  </button>\\n  <br><br>\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Tipo </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <mat-icon (click)=\\\"onPreUpdateConcepto(element)\\\">edit</mat-icon>\\n      &nbsp;\\n      <mat-icon (click)=\\\"onDeleteConcepto(element.id)\\\">delete</mat-icon>\\n    </td>\\n    </ng-container>\\n    \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatSort, MatTableDataSource, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CategoriasService } from '../../services/categorias.service';\nimport { CategoriaInterface } from '../../models/categoria';\nimport { CategoriaModalComponent } from '../../modals/categoria-modal/categoria-modal.component';\n\n@Component({\n  selector: 'app-categorias',\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.css']\n})\nexport class CategoriasComponent implements OnInit {\n\n  constructor(private categoriaService: CategoriasService, public dialog: MatDialog) { }\n  displayedColumns: string[] = ['type','name', 'actions'];\n  dataSource = new MatTableDataSource();\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(CategoriaModalComponent, {\n      width: '250px',\n      data: {selectedCategoria: this.categoriaService.selectedCategoria}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      \n    });\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n  \tthis.getAllCategorias();\n  }\n\n  ngAfterViewInit(){\n    this.dataSource.sort = this.sort;\n  }\n\n  getAllCategorias(){\n    this.categoriaService.getCategorias().subscribe(res => {\n      this.dataSource.data = res;\n    });\n  }\n\n  onChangeStatus(categoria: CategoriaInterface){\n    this.categoriaService.updateCategoria(categoria);\n  }\n\n  onPreUpdateConcepto(categoria: CategoriaInterface){\n    this.categoriaService.selectedCategoria = Object.assign({}, categoria);\n    this.openDialog();\n  }\n\n  onDeleteConcepto(idCategoria: string){\n    const confirmacion = confirm('Are you sure?');\n    if(confirmacion){\n      this.categoriaService.deleteCategoria(idCategoria);\n    }\n  }\n\n}\n","module.exports = \"h1{\\r\\n\\ttext-align: center;\\r\\n}\\r\\n\\r\\ntable{\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.mat-icon{\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb25jZXB0b3MvY29uY2VwdG9zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxrQkFBa0I7QUFDbkI7O0FBRUE7Q0FDQyxXQUFXO0FBQ1o7O0FBRUE7Q0FDQyxlQUFlO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb25jZXB0b3MvY29uY2VwdG9zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMXtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbnRhYmxle1xyXG5cdHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWljb257XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"header-app\\\">\\n  \\t<h1>Mantenimiento de Conceptos</h1>\\n  </div>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\">\\n  \\t<mat-icon>note_add</mat-icon> NEW\\n  </button>\\n  <br><br>\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n  \\t<ng-container matColumnDef=\\\"type\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Tipo </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"category\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Categoría </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripción </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"mount\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Monto </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.mount}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date.toDate() | date: 'dd/MM/yyyy'}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <mat-icon (click)=\\\"onPreUpdateConcepto(element)\\\">edit</mat-icon>\\n      &nbsp;\\n      <mat-icon (click)=\\\"onDeleteConcepto(element.id)\\\">delete</mat-icon>\\n    </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatSort, MatTableDataSource, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ConceptosService } from '../../services/conceptos.service';\nimport { ConceptoInterface } from '../../models/concepto';\nimport { ConceptoModalComponent } from '../../modals/concepto-modal/concepto-modal.component';\n\n@Component({\n  selector: 'app-conceptos',\n  templateUrl: './conceptos.component.html',\n  styleUrls: ['./conceptos.component.css']\n})\nexport class ConceptosComponent implements OnInit {\n\n  constructor(private conceptoService: ConceptosService, public dialog: MatDialog) { }\n  displayedColumns: string[] = ['type','category','description', 'mount', 'date', 'actions'];\n  dataSource = new MatTableDataSource();\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConceptoModalComponent, {\n      width: '250px',\n      data: {selectedConcepto: this.conceptoService.selectedConcepto,\n        }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      \n    });\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n  \tthis.getAllConceptos();\n  }\n\n  ngAfterViewInit(){\n    this.dataSource.sort = this.sort;\n  }\n\n  getAllConceptos(){\n    this.conceptoService.getConceptos().subscribe(res => {\n       this.dataSource.data = res;\n    });\n\n  }\n\n  onChangeStatus(concepto: ConceptoInterface){\n    this.conceptoService.updateConcepto(concepto);\n  }\n\n  onPreUpdateConcepto(concepto: ConceptoInterface){\n    this.conceptoService.selectedConcepto = Object.assign({}, concepto);\n    this.openDialog();\n  }\n\n  onDeleteConcepto(idConcepto: string){\n    const confirmacion = confirm('Are you sure?');\n    if(confirmacion){\n      this.conceptoService.deleteConcepto(idConcepto);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-login></app-login>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".header-app {\\r\\n\\ttext-align: center;\\r\\n}\\r\\n\\r\\n.div-login{\\r\\n\\tdisplay: inline-block;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.table-login{\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.form-control-login{\\r\\n\\ttext-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2Vycy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0Msa0JBQWtCO0FBQ25COztBQUVBO0NBQ0MscUJBQXFCO0NBQ3JCLFdBQVc7QUFDWjs7QUFFQTtDQUNDLFdBQVc7QUFDWjs7QUFFQTtDQUNDLGtCQUFrQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlcnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXItYXBwIHtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXYtbG9naW57XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4udGFibGUtbG9naW57XHJcblx0d2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2wtbG9naW57XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\"","module.exports = \"<h1 class=\\\"header-app\\\">Login</h1>\\n<div class=\\\"div-login\\\">\\n\\t<form [formGroup]=\\\"formLogin\\\" (ngSubmit)=\\\"onLogin()\\\">\\n\\t\\t<table class=\\\"table-login\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td class=\\\"form-control-login\\\">\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<input #email maxlength=\\\"50\\\" matInput placeholder=\\\"Ingresa tu Email\\\"  formControlName = \\\"email\\\">\\n\\t\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td class=\\\"form-control-login\\\">\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<input #password matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName = \\\"password\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td class=\\\"form-control-login\\\">\\n\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"btn-send\\\" (click)=\\\"onLogin()\\\">\\n\\t\\t\\t\\t\\t\\tLOGIN\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t</table>\\n\\t</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n\n  constructor(\n    public afAuth: AngularFireAuth, \n    private router: Router,\n    private authService: AuthService\n    ) { }\n\n  formLogin = new FormGroup ({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('')\n  });\n\n  ngOnInit() {\n  }\n\n  onLogin(): void{\n    console.log('email', this.formLogin.value.email);\n    console.log('password', this.formLogin.value.password);\n    this.authService.loginEmailUser(this.formLogin.value.email, this.formLogin.value.password)\n    .then((res) => {\n      this.onLoginRedirect();\n    }).catch(err => this.onCatchError(err));    \n  }\n\n  onLoginGoogle(): void{\n    this.authService.loginGoogleUser()\n    .then((res) => {\n      this.onLoginRedirect();\n    }).catch(err => this.onCatchError(err));    \n  }\n\n  onLoginFacebook(): void{\n    this.authService.loginFacebookUser()\n    .then((res) => {\n      this.onLoginRedirect();\n    }).catch(err => this.onCatchError(err));    \n  }\n\n  onLogout(): void{\n    this.authService.logoutUser();\n  }\n\n  onLoginRedirect(): void{\n    this.router.navigate(['conceptos/']);\n  }\n\n  onCatchError(err): void{\n    console.log('err', err.message);\n  }\n\n  getErrorMessage() {\n    return this.formLogin.get('email').hasError('required') ? 'Debes ingresar un valor' :\n        this.formLogin.get('email').hasError('email') ? 'Email inválido' :\n            '';\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlcnMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlcnMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  register works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1tZW51L21haW4tbWVudS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0JBQWdCO0VBQWhCLGdCQUFnQjtFQUNoQixNQUFNO0VBQ04sVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvbWFpbi1tZW51L21haW4tbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuIl19 */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\" *ngIf=\\\"!isLogged\\\" routerLink=\\\"/\\\">Login</a>\\n      <a mat-list-item href=\\\"#\\\" *ngIf=\\\"!isLogged\\\">Register</a>\\n      <a mat-list-item href=\\\"#\\\" *ngIf=\\\"isLogged\\\" routerLink=\\\"/conceptos\\\">Conceptos</a>\\n      <a mat-list-item href=\\\"#\\\" *ngIf=\\\"isLogged\\\" routerLink=\\\"/categorias\\\">Categorías</a>\\n      <a mat-list-item href=\\\"#\\\" *ngIf=\\\"isLogged\\\" (click)=\\\"onLogout()\\\">Logout</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>App de Balance</span>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AuthService } from '../services/auth.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(\n  \tprivate breakpointObserver: BreakpointObserver,\n  \tprivate authService: AuthService,\n  \tprivate afsAuth: AngularFireAuth\n  \t) {}\n\n  public isLogged: boolean = false;\n\n  getCurrentUser(){\n  \tthis.authService.isAuth().subscribe(auth => {\n  \t\tif(auth){\n  \t\t\tconsole.log('user logged');\n  \t\t\tthis.isLogged = true;\n  \t\t}else{\n  \t\t\tconsole.log('user not logged');\n  \t\t\tthis.isLogged = false;\n  \t\t}\n  \t})\n  }\n\n  ngOnInit() {\n  \tthis.getCurrentUser();\n  }\n\n  onLogout(){\n  \tthis.afsAuth.auth.signOut();\n  }\n}\n","import {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ],\r\n  imports: [\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule\r\n  ]\r\n})\r\nexport class MaterialModule {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jYXRlZ29yaWEtbW9kYWwvY2F0ZWdvcmlhLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 mat-dialog-title>{{ !this.data.selectedCategoria.id ? 'Nueva Categoría' : 'Actualizar Categoría' }}</h1>\\n<form #formCategoria=\\\"ngForm\\\" (ngSubmit)=\\\"onSaveCategoria(formCategoria)\\\">\\n<div mat-dialog-content>\\n  <p>Asigna los datos para la categoría</p>\\n  <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"this.data.selectedCategoria.id\\\">\\n  <mat-form-field>\\n    <mat-label>Tipo de Concepto</mat-label>\\n    <mat-select [ngModel]=\\\"this.data.selectedCategoria.type\\\" name=\\\"type\\\" [value]=\\\"selectedTipo\\\">\\n      <mat-option *ngFor=\\\"let tipo of tipos\\\" [value]=\\\"tipo.id\\\">\\n        {{tipo.name}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"this.data.selectedCategoria.name\\\" name=\\\"name\\\" placeholder=\\\"Nombre\\\">\\n  </mat-form-field>\\n</div>\\n</form>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\" >Close</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"this.formCategoria.onSubmit()\\\">Save</button>\\n</div>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport { CategoriaInterface } from '../../models/categoria';\nimport { TipoInterface } from '../../models/tipo';\n\nimport { CategoriasService } from '../../services/categorias.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-categoria-modal',\n  templateUrl: './categoria-modal.component.html',\n  styleUrls: ['./categoria-modal.component.css']\n})\nexport class CategoriaModalComponent implements OnInit {\n\n  constructor(\n  \tpublic dialogRef: MatDialogRef<CategoriaModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public categoriaService: CategoriasService) { }\n\n  public tipos: TipoInterface[] = [\n    {id: 'ingreso', name: 'Ingresos'},\n    {id: 'egreso', name: 'Egresos'}\n  ];\n\n  selectedTipo = 'Ingreso';\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n  }\n\n  onSaveCategoria(categoriaForm: NgForm): void{\n    if(this.data.selectedCategoria.id == null){\n      // New\n      console.log('New', categoriaForm.value);\n      if(this.data.selectedCategoria.name != null){\n        this.categoriaService.createCategoria(categoriaForm.value);\n      }\n    }else{\n      // Edit\n      console.log('Update', categoriaForm.value);\n      if(this.data.selectedCategoria.name != null){\n        this.categoriaService.updateCategoria(categoriaForm.value);\n      }\n    }\n    //console.log('Else', categoriaForm.value);\n    categoriaForm.resetForm();\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jb25jZXB0by1tb2RhbC9jb25jZXB0by1tb2RhbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 mat-dialog-title>{{ !this.data.selectedConcepto.id ? 'Nuevo Concepto' : 'Actualizar Concepto' }}</h1>\\n<form #formConcepto=\\\"ngForm\\\" (ngSubmit)=\\\"onSaveConcepto(formConcepto)\\\">\\n<div mat-dialog-content>\\n  <p>Asigna los datos para el concepto</p>\\n  <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"this.data.selectedConcepto.id\\\">\\n  <mat-form-field>\\n    <mat-label>Tipo de Concepto</mat-label>\\n    <mat-select [ngModel]=\\\"this.data.selectedConcepto.type\\\" name=\\\"type\\\" [value]=\\\"selectedTipo\\\" (ngModelChange)=\\\"getCategoriasByTipo($event)\\\">\\n      <mat-option *ngFor=\\\"let tipo of tipos\\\" [value]=\\\"tipo.id\\\">\\n        {{tipo.name}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>Categoría</mat-label>\\n    <mat-select [ngModel]=\\\"this.data.selectedConcepto.category\\\" name=\\\"category\\\" [value]=\\\"selectedCategoria\\\" >\\n      <mat-option *ngFor=\\\"let categoria of categorias\\\" [value]=\\\"categoria.name\\\">\\n        {{categoria.name}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"this.data.selectedConcepto.description\\\" name=\\\"description\\\" placeholder=\\\"Descripción\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n  \\t<input matInput [(ngModel)]=\\\"this.data.selectedConcepto.mount\\\" name=\\\"mount\\\" placeholder=\\\"Monto\\\" type=\\\"number\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n  <input matInput [matDatepicker]=\\\"pick\\\"  placeholder=\\\"Fecha\\\" [formControl]=\\\"fecha\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"pick\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #pick></mat-datepicker>\\n</mat-form-field>\\n</div>\\n</form>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\" >Close</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"(this.formConcepto.onSubmit())\\\">Save</button>\\n</div>\\n\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport { ConceptoInterface } from '../../models/concepto';\nimport { TipoInterface } from '../../models/tipo';\nimport { CategoriaInterface } from '../../models/categoria';\n\nimport { ConceptosService } from '../../services/conceptos.service';\nimport { CategoriasService } from '../../services/categorias.service';\n\nimport { NgForm, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-concepto-modal',\n  templateUrl: './concepto-modal.component.html',\n  styleUrls: ['./concepto-modal.component.css']\n})\nexport class ConceptoModalComponent implements OnInit {\n  constructor(    \n    public dialogRef: MatDialogRef<ConceptoModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public conceptoService: ConceptosService,\n    public categoriaService:  CategoriasService\n    ) {}\n\n  public tipos: TipoInterface[] = [\n    {id: 'ingreso', name: 'Ingresos'},\n    {id: 'egreso', name: 'Egresos'}\n  ];\n\n  public categorias: CategoriaInterface[] = [];\n\n  selectedTipo = 'Ingreso';\n  fecha = null;\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.getCategoriasByTipo('ingreso');\n    this.fecha = new FormControl(this.data.selectedConcepto.date.toDate());\n  }\n\n  onSaveConcepto(conceptoForm: NgForm): void{\n    if(this.data.selectedConcepto.id == null){\n      // New\n      console.log('New', conceptoForm.value);\n      if(this.data.selectedConcepto.description != null \n        && this.data.selectedConcepto.mount != null\n        && this.data.selectedConcepto.date != null){\n        conceptoForm.value.date = this.fecha.value;\n        this.conceptoService.createConcepto(conceptoForm.value);\n      }\n    }else{\n      // Edit\n      console.log('Update', conceptoForm.value);\n      if(this.data.selectedConcepto.description != null \n        && this.data.selectedConcepto.mount != null\n        && this.data.selectedConcepto.date != null){\n        conceptoForm.value.date = this.fecha.value;\n        this.conceptoService.updateConcepto(conceptoForm.value);\n      }\n    }\n    //console.log('Else', conceptoForm.value);\n    conceptoForm.resetForm();\n    this.dialogRef.close();\n  }\n\n  getAllCategorias(): void{\n    this.categoriaService.getCategorias().subscribe(res => {\n      this.categorias = res;\n    });\n  }\n\n  getCategoriasByTipo(tipo: string): void{\n    this.categoriaService.getCategoriasByTipo(tipo).subscribe(res => {\n      this.categorias = res;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { map } from 'rxjs/operators';\nimport { auth } from 'firebase/app';\n\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { UserInterface } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afsAuth: AngularFireAuth, private afs: AngularFirestore) { }\n\n  registerUser(email: string, pass: string){\n    return new Promise((resolve, reject) => {\n      this.afsAuth.auth.createUserWithEmailAndPassword(email, pass)\n      .then(userData => {\n        resolve(userData),\n          this.updateUserData(userData.user)\n      }).catch(err => console.log(reject(err)))\n    });\n  }\n\n  loginEmailUser(email: string, pass: string){\n    return new Promise((resolve, reject) => {\n      this.afsAuth.auth.signInWithEmailAndPassword(email, pass)\n      .then(userData => resolve(userData),\n      err => reject(err));\n    });\n  }\n\n  loginFacebookUser(){\n    return this.afsAuth.auth.signInWithPopup(new auth.FacebookAuthProvider())\n    .then(credential => {this.updateUserData(credential.user)});\n  }\n\n  loginGoogleUser(){\n    return this.afsAuth.auth.signInWithPopup(new auth.GoogleAuthProvider())\n    .then(credential => {this.updateUserData(credential.user)});\n  }\n\n  logoutUser(){\n    this.afsAuth.auth.signOut();\n  }\n\n  isAuth(){\n  \treturn this.afsAuth.authState.pipe(map(auth => auth));\n  }\n\n  private updateUserData(user){\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const data: UserInterface = {\n      id: user.uid,\n      email: user.email,\n      roles: {\n        editor: true\n      }\n    };\n    return userRef.set(data, { merge: true });\n  }\n\n  isUserAdmin(userUid){\n    return this.afs.doc<UserInterface>(`users/${userUid}`).valueChanges();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CategoriaInterface } from '../models/categoria';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  constructor(private readonly afs: AngularFirestore) {}\n  private categoriasCollection: AngularFirestoreCollection<CategoriaInterface>;\n  private categorias: Observable<CategoriaInterface[]>;\n  private categoriaDoc: AngularFirestoreDocument<CategoriaInterface>;\n  private categoria: Observable<CategoriaInterface>;\n  public selectedCategoria: CategoriaInterface = {\n    id: null\n  };\n\n  getCategorias(){\n    this.categoriasCollection = this.afs.collection<CategoriaInterface>('categorias');\n    return this.categorias = this.categoriasCollection.snapshotChanges()\n    .pipe(map(changes => {\n      return changes.map(action => {\n        const data = action.payload.doc.data() as CategoriaInterface;\n        data.id = action.payload.doc.id;\n        return data;\n      });\n    }));\n  }\n\n  getCategoriasByTipo(tipo: string) {\n    this.categoriasCollection = this.afs.collection('categorias', ref => ref.where('type', '==', tipo));\n    return this.categorias = this.categoriasCollection.snapshotChanges()\n      .pipe(map(changes => {\n        return changes.map(action => {\n          const data = action.payload.doc.data() as CategoriaInterface;\n          data.id = action.payload.doc.id;\n          return data;\n        });\n      }));\n  }\n\n  updateCategoria(categoria: CategoriaInterface){\n  \treturn this.categoriasCollection.doc(categoria.id).update(categoria);\n  }\n\n  deleteCategoria(id: string){\n  \treturn this.categoriasCollection.doc(id).delete();\n  }\n\n  createCategoria(categoria: CategoriaInterface){\n  \treturn this.categoriasCollection.add(categoria);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ConceptoInterface } from '../models/concepto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConceptosService {\n\n  constructor(private readonly afs: AngularFirestore) {}\n  private conceptosCollection: AngularFirestoreCollection<ConceptoInterface>;\n  private conceptos: Observable<ConceptoInterface[]>;\n  private conceptoDoc: AngularFirestoreDocument<ConceptoInterface>;\n  private concepto: Observable<ConceptoInterface>;\n  public selectedConcepto: ConceptoInterface = {\n    id: null\n  };\n\n  getConceptos(){\n    this.conceptosCollection = this.afs.collection<ConceptoInterface>('conceptos');\n    return this.conceptos = this.conceptosCollection.snapshotChanges()\n    .pipe(map(changes => {\n      return changes.map(action => {\n        const data = action.payload.doc.data() as ConceptoInterface;\n        data.id = action.payload.doc.id;\n        return data;\n      });\n    }));\n  }\n\n  updateConcepto(concepto: ConceptoInterface){\n    /*console.log(concepto.date.getFullYear(), concepto.date.getMonth() + 1, concepto.date.getDate()); \n    let day = concepto.date.getDate();\n    let month = concepto.date.getMonth();\n    let year = concepto.date.getFullYear();\n\n    let fecha: string = (month + 1 ) + \"/\" + day + \"/\" + year;\n    concepto.date = fecha;*/\n  \treturn this.conceptosCollection.doc(concepto.id).update(concepto);\n  }\n\n  deleteConcepto(id: string){\n  \treturn this.conceptosCollection.doc(id).delete();\n  }\n\n  createConcepto(concepto: ConceptoInterface){\n    console.log(concepto.date.getDate);\n  \treturn this.conceptosCollection.add(concepto);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyCMjNu7_xAOlTR9vkGsKEb1yQqQVcZfrG8\",\n    authDomain: \"balanceapp-31e4c.firebaseapp.com\",\n    databaseURL: \"https://balanceapp-31e4c.firebaseio.com\",\n    projectId: \"balanceapp-31e4c\",\n    storageBucket: \"balanceapp-31e4c.appspot.com\",\n    messagingSenderId: \"762640607428\",\n    appId: \"1:762640607428:web:a2d62cb3c4053fad\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}